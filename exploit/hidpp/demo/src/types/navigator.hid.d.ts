import { uint8 } from "./types";

// Type declarations for WebHID API
// https://developer.mozilla.org/en-US/docs/Web/API/HID

interface HIDDevice {
  readonly opened: boolean;
  readonly vendorId: number;
  readonly productId: number;
  readonly productName: string;
  // missing: collections
  open(): Promise<void>;
  close(): Promise<void>;
  forget(): Promise<void>;
  sendReport(
    reportId: uint8,
    data: ArrayBuffer | TypedArray | DataView
  ): Promise<void>;
  sendFeatureReport(
    reportId: uint8,
    data: ArrayBuffer | TypedArray | DataView
  ): Promise<void>;
  receiveFeatureReport(reportId: uint8): Promise<DataView>;

  // events
  oninputreport: (...args: any[]) => void;
}

interface HIDDeviceFilter {
  vendorId?: number;
  productId?: number;
  usage?: number;
  usagePage?: number;
}

interface HIDDeviceFilters {
    filters: Array<HIDDeviceFilter>;
}

interface HID {
  getDevices(): Promise<Array<HIDDevice>>;
  requestDevice(options: HIDDeviceFilters): Promise<Array<HIDDevice>>;
}

interface NavigatorHID {
  readonly hid?: HID;
}

interface NavigatorExtended extends NavigatorHID {}
